{"remainingRequest":"/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/joaovdiasb/Git/virtiz-docs/docs/src/servers/server-provider.md?vue&type=template&id=9893d19c&","dependencies":[{"path":"/Users/joaovdiasb/Git/virtiz-docs/docs/src/servers/server-provider.md","mtime":1697039097447},{"path":"/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1697036307772},{"path":"/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1697036307772},{"path":"/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/babel-loader/lib/index.js","mtime":1697036306238},{"path":"/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1697036307711},{"path":"/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1697036307772},{"path":"/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1697036307708},{"path":"/Users/joaovdiasb/Git/virtiz-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1697036308924}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}